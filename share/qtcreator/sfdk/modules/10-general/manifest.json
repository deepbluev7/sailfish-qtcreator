{
    "version": 4,
    "domain": "general",
    "trBrief": "General usage",

    "trDescription": "=== Introduction\n\nSfdk divides its functionality into a number of commands available through the main executable.\n\n    $ sfdk <command> <args>...\n\nPass '--help' together with a command name for the details on a particular command. Introductory guides and other information concerning multiple commands addressing a particular domain can be obtained with '--help-<domain>'. Alternatively, '--help-all' covers all domains on a single page.\n\n    $ sfdk --help <command>\n    $ sfdk --help-<domain>\n    $ sfdk --help-all\n\nSfdk is strict about ordering any 'global options' (see GLOBAL OPTIONS) prior to a command name on the command line. Similarly, any non-global options ('command options') may only appear after the respective command name. The only exception to this rule are the various '--help*' options, which may be conveniently passed anywhere on the command line.\n\n    $ sfdk ... <command> ... --help\n    $ sfdk ... <command> ... --help-<domain>\n\n=== Configuration\n\nMany aspects of sfdk behavior are controlled with (persistent) 'configuration options' (see CONFIGURATION OPTIONS). Configuration can be maintained with the 'config' command.\n\nConfiguration changes may be applied globally (with the '--global' option) or just for the current (shell) session.  One-time configuration changes are possible with the global option '-c'.  Letâ€™s exercise all three options and review the effect:\n\n    $ sfdk config --global --push task bug-1234\n    $ sfdk config --push task feature-5678\n    $ sfdk -c task=bug-1234 config\n    # ---- command scope ---------\n    task = bug-1234\n\n    # ---- session scope ---------\n    # masked at command scope\n    ;task = feature-5678\n\n    # ---- global scope ---------\n    # masked at session scope\n    ;task = bug-1234\n\nOptions pushed higher on the stack override (mask) those appearing more lower - as stated conveniently in the output.\n\nSee the 'config' command for more details.",

    "worker":
    {
        "type": "builtin",
        "version": 1
    },

    "commands":
    [
        {
            "name": "config",
            "trSynopsis": "[--show]\n[--<scope>] --push <name> [<value>]\n[--<scope>] --push-mask <name>\n[--<scope>] --drop <name>\n[--<scope>] <name>[=[<value>]]",
            "trBrief": "Configure sfdk",
            "trDescription": "Configuration is stack based. Options that occur higher on the stack may override earlier options, including those implied by the earlier options. (Note the analogy with command line - later options can override the earlier ones.) Pushing an option again moves it to the top of the stack.\n\nThree configuration <scope>s are managed separately: 'global' (outermost), 'session' and 'command'. Changes at the 'session' scope remain active for the rest of the current shell session. The 'command' scope is not persistent and can be modified only using the global '-c' option. Options pushed at an inner scope mask the same options pushed at an outer scope, which has the same effect as dropping the options pushed at the outer scope. Options can be masked without pushing them at the inner scope by using '--push-mask' instead of '--push'.\n\nThe default is to operate at the 'session' scope.\n\nThe shorthand syntax '<name>[=[<value>]]' can be used similarly to how the global '-c' option is used:\n\n    | Shorthand syntax | Equivalent to         |\n    |------------------+-----------------------|\n    | <name>=<value>   | --push <name> <value> |\n    | <name>           | --push <name>         |\n    | <name>=          | --push-mask <name>    |"
        },
        {
            "name": "misc",
            "trSynopsis": "set <property>=<value>...\nshow\nstop-vms",
            "trBrief": "Maintain and control miscellaneous SDK properties",
            "trDescription": "Miscellaneous SDK maintenance and control commands that do not fit elsewhere.\n\nThe 'set' and 'show' commands can be used to set and query global SDK properties. Known global properties are described further below.\n\nThe 'stop-vms' command can be used to ensure that none of the virtual machines provided by the SDK is running.\n\nGlobal SDK properties:\n\nproxy {direct|auto|manual}::\n+\n--\nNetwork proxy configuration to be used throughout the SDK.\n\nAttention: Currently this option is only effective for the build engine.\n\nSetting this option to 'direct' enables direct access to the network.\n\nUsing the 'auto' keyword enables automatic discovery of network proxy configuration. In this case it is optional to provide proxy autoconfiguration URL via the 'proxy.servers' option. The 'proxy.excludes' option is ignored in this case.\n\nWhen the 'manual' keyword is used, one or more 'proxy.servers' must be specified (example: \"proxy1.example.com 1.2.3.4:8080\") and optionally 'proxy.excludes' may be specified (example: \"internal.example.com 10.0.0.0/8\").\n--\n\nproxy.servers [<url>...]::\n+\n--\nSee 'proxy'.\n--\n\nproxy.excludes [<url>...]::\n+\n--\nSee 'proxy'.\n--"
        },
        {
            "name": "maintain",
            "trBrief": "Launch the interactive SDK Maintenance tool",
            "trDescription": "Launch the interactive SDK Maintenance tool"
        }
    ],

    "options":
    [
        {
            "name": "hooks-dir",
            "trArgument": "<dir>",
            "trDescription": "Alter sfdk behavior with hooks in form of executable files located under the <dir> directory.\n\nAvailable hooks are described in a separate section of this manual.",
            "validator": "module.validateExistingDirectory"
        }
    ]
}
